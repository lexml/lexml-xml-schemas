<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.gov.lexml</groupId>
	<artifactId>lexml-xml-schemas</artifactId>
	<packaging>jar</packaging>
	<version>3.1.8</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
	</properties>

	<scm>
		<url>https://github.com/lexml/${project.artifactId}</url>
		<connection>scm:git:https://github.com/lexml/${project.artifactId}.git</connection>
		<developerConnection>scm:git:https://github.com/lexml/${project.artifactId}.git</developerConnection>
		<tag>lexml-xml-schemas-3.1.8</tag>
	</scm>
	
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>GitHub ${project.artifactId} Repository</name>
			<url>https://raw.github.com/lexml/mvn-repo/master</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>GitHub Repository</id>
			<url>https://raw.github.com/lexml/mvn-repo/master</url>
			<releases>
      			<enabled>true</enabled>
    		</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<testResources>
			<testResource>
				<directory>src/main/resources</directory>
			</testResource>		
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/test/xml</directory>
			</testResource>
		</testResources>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<detail>true</detail>
					<allowTimestampedSnapshots>true</allowTimestampedSnapshots>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-source-plugin</artifactId>
			  <version>3.0.0</version>
			  <executions>
			    <execution>
			      <id>attach-sources</id>
			      <goals>
			        <goal>jar</goal>
			      </goals>
			    </execution>
			  </executions>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for ${project.artifactId}
						${project.version}</message>  <!-- git commit message -->
					<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
					<branch>refs/heads/master</branch>
					<includes>
						<include>**/*</include>
					</includes>
					<repositoryName>mvn-repo</repositoryName>      <!-- github repo name -->
					<repositoryOwner>lexml</repositoryOwner>    <!-- github username -->
					<merge>true</merge>
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 
						'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>			
		
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>br.gov.lexml.schema.validator.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<source>
								def srcDir = new File(project.basedir,'src/test/xml').getAbsoluteFile()
								def dir = new File(project.basedir, 'target/test-classes')
								dir.mkdirs()
								def target = new File(dir, 'lista-exemplos.txt')
								scanner = ant.fileScanner {
									fileset(dir: srcDir) {
										include(name:"**/*.xml")
									}
								}
								len = srcDir.path.length()+1
								paths = new StringBuilder()
								for(f in scanner) {
									paths.append(f.path.substring(len) + '\n')
								}
								ant.echo(file:target, message: paths.toString())
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>true</doUpdate>
				</configuration>
			</plugin>
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<manifestEntries>
							<lexml_parser_componente_nome>${groupId}/${artifactId}</lexml_parser_componente_nome>
							<lexml_parser_componente_build>${buildNumber}</lexml_parser_componente_build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.groovy.maven
										</groupId>
										<artifactId>
											gmaven-plugin
										</artifactId>
										<versionRange>
											[1.0,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.29</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		 
	</dependencies>
</project>
